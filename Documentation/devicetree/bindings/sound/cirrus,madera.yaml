# SPDX-License-Identifier: GPL-2.0-only OR BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/sound/cirrus,madera.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Cirrus Logic Madera class audio CODECs

maintainers:
  - patches@opensource.cirrus.com

description: |
  This describes audio configuration bindings for these codecs.

  See also the core bindings for the parent MFD driver:

    Documentation/devicetree/bindings/mfd/cirrus,madera.yaml

  and defines for values used in these bindings:

    include/dt-bindings/sound/madera.h

  The properties are all contained in the parent MFD node.

allOf:
  - $ref: dai-common.yaml#

properties:
  '#sound-dai-cells':
    description:
      The first cell indicating the audio interface.
    const: 1

  cirrus,inmode:
    description:
      A list of input mode settings for each input. A maximum
      of 24 cells, with four cells per input in the order INnAL,
      INnAR INnBL INnBR.  For non-muxed inputs the first two cells
      for that input set the mode for the left and right channel
      and the second two cells must be 0.  For muxed inputs the
      first two cells for that input set the mode of the left and
      right A inputs and the second two cells set the mode of the
      left and right B inputs.  Valid mode values are one of the
      MADERA_INMODE_xxx. If the array is shorter than the number
      of inputs the unspecified inputs default to MADERA_INMODE_DIFF.
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 1
    maxItems: 24
    items:
      minimum: 0
      maximum: 1
      default: 0

  cirrus,out-mono:
    description:
      Mono bit for each output, maximum of six cells if the array
      is shorter outputs will be set to stereo.
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 1
    maxItems: 6
    items:
      minimum: 0
      maximum: 1
      default: 0

  cirrus,dmic-ref:
    description: |
      Indicates how the MICBIAS pins have been externally connected
      to DMICs on each input, one cell per input.

        <IN1 IN2 IN3 ...>

      A value of 0 indicates MICVDD and is the default,
      other values depend on the codec: For CS47L35 one of the
      CS47L35_DMIC_REF_xxx values For all other codecs one of
      the MADERA_DMIC_REF_xxx values Also see the datasheet for a
      description of the INn_DMIC_SUP field.
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 1
    maxItems: 6
    items:
      minimum: 0
      maximum: 3
      default: 0

  cirrus,max-channels-clocked:
    description:
      Maximum number of channels that I2S clocks will be generated
      for. Useful when clock master for systems where the I2S bus
      has multiple data lines.  One cell for each AIF, use a value
      of zero for AIFs that should be handled normally.
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 1
    maxItems: 4
    items:
      default: 0

  cirrus,pdm-fmt:
    description:
      PDM speaker data format, must contain 2 cells (OUT5 and
      OUT6). See the PDM_SPKn_FMT field in the datasheet for a
      description of this value. The second cell is ignored for
      codecs that do not have OUT6.
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 2
    maxItems: 2

  cirrus,pdm-mute:
    description: |
      PDM mute format, must contain 2 cells (OUT5 and OUT6). See the
      PDM_SPKn_CTRL_1 register in the datasheet for a description
      of this value.  The second cell is ignored for codecs that
      do not have OUT6.
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 2
    maxItems: 2

  cirrus,micd-detect-debounce-ms:
    description: |
     Extra debounce timeout during initial mic detect (milliseconds)
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,micd-manual-debounce:
    description: |
      Extra software debounces during button detection
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,micd-bias-start-time:
    description: |
      Time allowed for MICBIAS to startup prior to
      performing microphone detection, specified as per the MICD_BIAS_STARTTIME
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,micd-rate:
    description: |
      Delay between successive microphone detection
      measurements, specified as per the MICD_RATE bits in the register
      MIC_DETECT_1.
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,micd-dbtime:
    description: |
      Mic detect debounce level
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,micd-timeout-ms:
    description: |
      Mic detect timeout (milliseconds)
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,micd-force-micbias:
    description: |
    $ref: /schemas/types.yaml#/definitions/bool
    maxItems: 1

  cirrus,jd-use-jd2:
    description: |
      Set whether JD2 is used for jack detection
    $ref: /schemas/types.yaml#/definitions/bool
    maxItems: 1

  cirrus,jd-invert:
    description: |
      Set to true if jackdet contact opens on insert
    $ref: /schemas/types.yaml#/definitions/bool
    maxItems: 1

  cirrus,fixed-hpdet-imp:
    description: |
      If non-zero don't run headphone detection, just report this value
      Specified as hundredths-of-an-ohm, that is (ohms * 100)
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,hpdet-short-circuit-imp:
    description: |
      If non-zero, specifies the maximum impedance in ohms
      that will be considered as a short circuit.
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,hpdet-channel:
    description: |
      Channel to use for headphone detection, valid values are 0 for
      left and 1 for right.
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,micd-clamp-mode:
    description: |
      Mic detect clamp function
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,hpdet-ext-res:
    description: |
      Impedance of external series resistor on hpdet.
      Specified as hundredths-of-an-ohm, that is (ohms * 100)
    $ref: /schemas/types.yaml#/definitions/uint32
    maxItems: 1

  cirrus,hpd-pins:
    description: |
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 1
    maxItems: 1

  cirrus,micd-configs:
    description: |
      Headset polarity configurations, variable length but
      must be a multiple of 5 cells, each 5-cell group represents one
      polarity configuration. First cell is the value of ACCDET_SRC
      register field (CS47L15, CS47L90 etc.), MICD_SENSE_SEL register
      field (all other codecs). Second cell is the accessory detection
      ground as per the MICD_GND_SEL register field. The third cell is
      the MICBIAS to be used as per the MICD_BIAS_SRC register field.
      Fourth cell is the value of the micd-pol-gpio pin, a non-zero value
      indicates this should be on. Fifth cell is set to zero (cs47l15)
      value of HPn_GND_SEL register field (all other codecs)
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 1
    maxItems: 1

  cirrus,micd-ranges:
    description: |
      Microphone detection level and key configuration, this
      field can be of variable length but should always be a multiple of 2 cells
      long, each two cell group represents one button configuration
      The first cell is the maximum impedance for this button in ohms
      The second cell the key that should be reported to the input layer
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 1
    maxItems: 1

additionalProperties: true
